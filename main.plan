<?xml version="1.0" encoding="UTF-8"?>

<alvisnlp-plan id="main">


  <!--
  ///////////////////////////////////////////////////////////////////////////////////////
  //
  // I. Load html corpus
  //
  ///////////////////////////////////////////////////////////////////////////////////////
  -->

    <read-html href="modules/read-html.plan">
      <sourcePath>resources/Corpus-v-12-04-21/train/</sourcePath>
    </read-html>


  <!--
  ///////////////////////////////////////////////////////////////////////////////////////
  //
  // II. Segment text
  //
  ///////////////////////////////////////////////////////////////////////////////////////
  -->

    <!-- load segmentation plan -->
    <import>res://segmentation.plan</import>


    <!-- <tokens class="WoSMig">
      <balancedPunctuations>)</balancedPunctuations>
    </tokens> -->



    <!-- load treetagger -->
    <execute-treetagger href="modules/execute-treetagger.plan">
      <parFile>../../work/inrae/outils/tree-tagger/lib/french.par</parFile>
      <treeTaggerExecutable>../../work/inrae/outils/tree-tagger/bin/tree-tagger</treeTaggerExecutable>
    </execute-treetagger>





  <!--
  ///////////////////////////////////////////////////////////////////////////////////////
  //
  // III. Match terms
  //
  ///////////////////////////////////////////////////////////////////////////////////////
  -->

    <!-- match fcu vocabulary-->
    <project-fcu href="modules/project-lemma.plan">
      <source>resources/usageCulture20210112.rdf</source>
      <targetLayerName>fcu</targetLayerName>
    </project-fcu>

    <!-- <fcu-tomap>
      <yatea class="YateaExtractor">
	<xmlTermsFile>output/yatea.xml</xmlTermsFile>
	<language>FR</language>
      </yatea> -->

      <!-- <classify class="TomapProjector">
	<tomapClassifier graylist="resources/tomap-graylist.txt">output/usageCulture.tomap</tomapClassifier>
	<targetLayerName>fcu-tomap</targetLayerName>
	<yateaFile output-feed="true">output/yatea.xml</yateaFile>
	<conceptFeature>IRI</conceptFeature>
	<explanationFeaturePrefix>tomap-</explanationFeaturePrefix>
      </classify>

      <label class="FileMapper">
	<mappingFile>resources/usageCulture20210112.txt</mappingFile>
	<target>documents.sections.layer:fcu-tomap</target>
	<form>@IRI</form>
	<targetFeatures>,,skos-prefLabel</targetFeatures>
	<keyColumn>1</keyColumn>
      </label>
    </fcu-tomap> -->

    <!-- match phenological stages -->
    <project-stage href="modules/project-lemma.plan">
      <source>resources/stades.rdf</source>
      <targetLayerName>stages</targetLayerName>
    </project-stage>

    <!-- delete repeating elements from the layer stages  -->
    <remove-equal class="Action">
      <target>documents.sections.layer:stages[outside:fcu]</target>
      <action>delete</action>
      <deleteElements/>
    </remove-equal>



    <!--
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // IV. Find conjunctions
    //
    ///////////////////////////////////////////////////////////////////////////////////////
    -->


    <conj-patterns href="modules/find-conj-patterns.plan"/>




    <!--
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // V. Find bbbch
    //
    ///////////////////////////////////////////////////////////////////////////////////////
    -->


    <bbch-patterns href="modules/find-bbch-patterns.plan"/>




    <!--
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // VI. Save results
    //
    ///////////////////////////////////////////////////////////////////////////////////////
    -->
    <export href="modules/export.plan"/>


</alvisnlp-plan>





    <!-- save matching  elements from the layer conjunctions  -->
    <!-- <rem-conj class="Action">
      <target>documents.sections.layer:fcu[outside:conjunctions]</target>
      <action>set:feat:match("conj")</action>
      <setFeatures/>
    </rem-conj> -->



    <!-- delete repeating elements from the layer stages  -->
    <!-- <remove-equal class="Action">
      <target>documents.sections.(layer:conjunctions[@match=="fcu"]| layer:fcu[@match=="conj"])</target>
      <action>delete</action>
      <deleteElements/>
    </remove-equal> -->

    <!-- <layer class="MergeLayers">
      <sourceLayerNames>conjunctions[@match == "fcu"],fcu[@match == "conj"]</sourceLayerNames>
      <targetLayerName>conj_matched</targetLayerName>
    </layer> -->




    <!-- <compare class="CompareElements">
      <sections>documents.sections</sections>
      <reference>layer:conjunctions[@match == "fcu"]</reference>
      <predicted>layer:fcu[@match == "conj"]</predicted>
      <face>@form</face>
      <outFile>output/compare.txt</outFile>
      <similarity>strict</similarity>
    </compare> -->



    <!--
    before:words{-3}.@form;
    before:words{-2}.@form;
    before:words{-1}.@form;
    after:words{0}.@form;
    after:words{1}.@form;
    after:words{2}.@form;

    -->

    <!-- features  ;
    str:join:' '(inside:words, @lemma)
    -->
