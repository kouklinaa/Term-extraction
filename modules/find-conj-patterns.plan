<?xml version="1.0" encoding="UTF-8"?>

<alvisnlp-plan id="patterns">


  <param name="save">
    <alias module="save-conj" param="outDir"/>
  </param>


  <!--
  ///////////////////////////////////////////////////////////////////////////////////////
  //
  //  Annotate
  //
  ///////////////////////////////////////////////////////////////////////////////////////
  -->


  <GN class="PatternMatcher">
    <pattern>

      [ @pos == "DET:ART" ]?
      [ @pos == "NOM" ]
      [ @pos == "ADJ"]?

      (
        [ @form ^= "des" or @form ^= "du" or @form ^= "de" ][ @form ^= "la"  ]?
        [ @pos == "NOM" or @pos == "NAM"]
        [ @pos == "ADJ"]?
      )?

    </pattern>
    <actions>
      <createAnnotation layer="GN"/>
    </actions>
    <constantAnnotationFeatures>type=GN</constantAnnotationFeatures>
  </GN>



  <N_KON_N class="PatternMatcher">
    <pattern>

      <!-- nom  -->
      [overlapping:GN]
      <!-- et -->
      [ @form == "et"]
      <!-- nom  -->
      [overlapping:GN]

    </pattern>
    <actions>
      <createAnnotation layer="conjunctions"/>
    </actions>
    <constantAnnotationFeatures>type=N_KON_N</constantAnnotationFeatures>
  </N_KON_N>



  <N_PUN_N class="PatternMatcher">
    <pattern>

      <!-- nom , nom, nom, -->
      (
        [overlapping:GN]
        [ @pos == "PUN" and @form == ","]
      )+

      <!-- nom  -->
      [overlapping:GN]

    </pattern>
    <actions>
      <createAnnotation layer="conjunctions"/>
    </actions>
    <constantAnnotationFeatures>type=N_PUN_N</constantAnnotationFeatures>
  </N_PUN_N>




    <N_PUN_N_KON_N class="PatternMatcher">
      <pattern>

        (
          [ @pos ^= "DET:ART" ]?
          [ @pos ^= "NOM" ] ([ @pos ^= "PRP:det" or @lemma ^= "de" ]
          [ @pos ^= "DET:ART" ]?
          [ @pos ^= "NOM" or @pos ^= "NAM" ])?
          [ @pos ^= "PUN" and @lemma ^=","]
        )+


        [ @pos ^= "DET:ART" ]?
        [ @pos ^= "NOM" ]
        ([ @pos ^= "PRP:det" or @lemma ^= "de" ]
        [ @pos ^= "DET:ART" ]?
        [ @pos ^= "NOM" or @pos ^= "NAM"])?


        [ @pos ^= "KON" and @lemma ^= "et"]

        [ @pos ^= "DET:ART" ]?
        [ @pos ^= "NOM" ]
        ([ @pos ^= "PRP:det" or @lemma ^= "de" ]
        [ @pos ^= "DET:ART" ]?
        [ @pos ^= "NOM" or @pos ^= "NAM"])?


      </pattern>
      <actions>
        <createAnnotation layer="conjunctions"/>
      </actions>
      <constantAnnotationFeatures>type=N_PUN_N_KON_N</constantAnnotationFeatures>
    </N_PUN_N_KON_N>



  <!-- <N_PUN_N_KON_N class="PatternMatcher">
    <pattern>

      (
        [overlapping:GN]
        [ @form == ","]
      )+


      [overlapping:GN]?
      [ @form == "et"]
      [overlapping:GN]

    </pattern>
    <actions>
      <createAnnotation layer="conjunctions"/>
    </actions>
    <constantAnnotationFeatures>type=N_PUN_N_KON_N</constantAnnotationFeatures>
  </N_PUN_N_KON_N> -->



  <!--
  ///////////////////////////////////////////////////////////////////////////////////////
  //
  //  Export
  //
  ///////////////////////////////////////////////////////////////////////////////////////
  -->

  <overlaps class="RemoveOverlaps">
    <layerName>conjunctions</layerName>
    <removeEqual>false</removeEqual>
  </overlaps>


  <save-conj class="TabularExport">
     <corpusFile>conjunctions.csv</corpusFile>
     <lines>documents.sections.layer:conjunctions[inside:fcu-baseline]</lines>
     <headers>"bsv","context before", "conjunction", "context after", "location","features"</headers>
     <columns separator=";">
       <!-- short document id  -->
       str:replace(str:basename(section.document.@id), ".html", "");
       <!-- context before  -->
       str:normalizeSpace(str:sub(section.contents, m:max(0, start - 20), start));
       <!-- entity  -->
       @form;
       <!-- match  -->
       <!-- str:join:', '(inside:fcu-baseline, @form ); -->
       <!-- context after  -->
       str:normalizeSpace(str:sub(section.contents, end, m:min(end + 20, str:len(section.contents))));
       <!-- location  -->
       start ^ "-" ^ end;
       <!-- features  -->
       str:join:', '(nav:features, @key ^ "=" ^ @value)
     </columns>
     <trueCSV/>
   </save-conj>



</alvisnlp-plan>
